{"ast":null,"code":"var _jsxFileName = \"/home/kevit/React Practice 1/project/src/Component/FetchData.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport classes from \"./FetchData.module.css\";\nimport img from \"../image/200w.gif\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FetchData = () => {\n  _s();\n  const [isData, setIsData] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [dataHide, setDataHide] = useState(true);\n  useEffect(() => {\n    setIsLoading(true);\n    setTimeout(() => {\n      fetch(\"https://jsonplaceholder.typicode.com/users\").then(respose => {\n        return respose.json();\n      }).then(data => {\n        setIsData(data);\n        setIsLoading(false);\n        console.log(data);\n      });\n    }, 2000);\n  }, []);\n  const changeHandler = event => {\n    setIsLoading(true);\n    setDataHide(false);\n    setTimeout(() => {\n      setSearch(event.target.value);\n      setIsLoading(false);\n      setDataHide(true);\n    }, 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.section,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search\",\n        className: classes.input,\n        onChange: changeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), dataHide && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.section,\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: classes.table,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Mobile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: img,\n          className: classes.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), isData.filter(data => {\n          return search.toLowerCase() === \"\" ? data : data.name.toLowerCase().includes(search) || data.username.toLowerCase().includes(search) || data.email.toLowerCase().includes(search) || data.phone.toLowerCase().includes(search);\n        }).map(data => {\n          return /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: data.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: data.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: data.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: data.phone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this)\n          }, data.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(FetchData, \"ofVuHvwlWlt65Ck+lz3pqMaEXKU=\");\n_c = FetchData;\nexport default FetchData;\nvar _c;\n$RefreshReg$(_c, \"FetchData\");","map":{"version":3,"names":["useEffect","useState","classes","img","jsxDEV","_jsxDEV","FetchData","_s","isData","setIsData","search","setSearch","isLoading","setIsLoading","dataHide","setDataHide","setTimeout","fetch","then","respose","json","data","console","log","changeHandler","event","target","value","children","className","section","type","placeholder","input","onChange","fileName","_jsxFileName","lineNumber","columnNumber","table","src","filter","toLowerCase","name","includes","username","email","phone","map","id","_c","$RefreshReg$"],"sources":["/home/kevit/React Practice 1/project/src/Component/FetchData.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport classes from \"./FetchData.module.css\";\nimport img from \"../image/200w.gif\";\n\nconst FetchData = () => {\n  const [isData, setIsData] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [dataHide , setDataHide] = useState(true)\n\n  useEffect(() => {\n    setIsLoading(true);\n    setTimeout(() => {\n      fetch(\"https://jsonplaceholder.typicode.com/users\")\n        .then((respose) => {\n          return respose.json();\n        })\n        .then((data) => {\n          setIsData(data);\n          setIsLoading(false);\n          console.log(data);\n        });\n    }, 2000);\n  }, []);\n\n  const changeHandler = (event) => {\n    setIsLoading(true);\n    setDataHide(false)\n    setTimeout(() => {\n      setSearch(event.target.value);\n      setIsLoading(false);\n      setDataHide(true)\n      \n    }, 2000);\n  };\n\n  return (\n    <div>\n      <section className={classes.section}>\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className={classes.input}\n          onChange={changeHandler}\n        />\n      </section>\n     {dataHide && <section className={classes.section}>\n        <table className={classes.table}>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Username</th>\n              <th>Email</th>\n              <th>Mobile</th>\n            </tr>\n          </thead>\n          {isLoading && <img src={img} className={classes.img} />}\n\n          {isData\n            .filter((data) => {\n              return search.toLowerCase() === \"\"\n                ? data\n                : data.name.toLowerCase().includes(search) ||\n                    data.username.toLowerCase().includes(search) ||\n                    data.email.toLowerCase().includes(search) ||\n                    data.phone.toLowerCase().includes(search);\n            })\n            .map((data) => {\n              return (\n                <tbody key={data.id}>\n                  <tr>\n                    <td>{data.name}</td>\n                    <td>{data.username}</td>\n                    <td>{data.email}</td>\n                    <td>{data.phone}</td>\n                  </tr>\n                </tbody>\n              );\n            })}\n        </table>\n      </section> }\n    </div>\n  );\n};\nexport default FetchData;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}